name: Foil Report - Mise à jour quotidienne

on:
  schedule:
    # Exécutions quotidiennes à 6h, 12h et 18h (heure française)
    - cron: '0 4 * * *'   # 6h00 heure française (4h00 UTC)
    - cron: '0 10 * * *'  # 12h00 heure française (10h00 UTC)
    - cron: '0 16 * * *'  # 18h00 heure française (16h00 UTC)
  workflow_dispatch:  # Permet l'exécution manuelle

jobs:
  update-foil-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout du repository
      uses: actions/checkout@v4
      
    - name: Configuration de Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Setup Firefox
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: 'latest'
        
    - name: Création des dossiers nécessaires
      run: |
        mkdir -p Donnees_Temporaires
        
    - name: Configuration pour Selenium Manager
      run: |
        # Utiliser Selenium Manager (automatique) au lieu de drivers manuels
        sed -i 's|DRIVER_PATH = os.path.join(PROJECT_ROOT, "Drivers", "geckodriver.exe")|DRIVER_PATH = None  # Selenium Manager sen charge automatiquement|' Scripts_Python/config.py
        sed -i 's|FIREFOX_PATH = r"C:\\Program Files\\Mozilla Firefox\\firefox.exe"|FIREFOX_PATH = "/usr/bin/firefox"|' Scripts_Python/config.py
        
    - name: Exécution du scraper
      run: |
        cd Scripts_Python
        python -c "import selenium; print('Selenium version:', selenium.__version__)"
        python windguru_csv_scraper.py
        
    - name: Génération du rapport HTML
      run: |
        cd Scripts_Python
        python csv_to_html_viewer.py
        
    - name: Vérification des fichiers générés
      run: |
        echo "=== Fichiers générés ==="
        ls -la ../Donnees_Temporaires/
        echo "=== Contenu du rapport HTML ==="
        head -20 ../Donnees_Temporaires/FR_*.html
        
    - name: Suppression des anciens fichiers HTML et création du nouveau index
      run: |
        cd Donnees_Temporaires
        
        # Trouver le nouveau fichier HTML généré (créé par le script Python)
        NEW_HTML_FILE=$(ls FR_*.html 2>/dev/null | head -1)
        
        if [ -n "$NEW_HTML_FILE" ]; then
          echo "Nouveau fichier HTML trouvé: $NEW_HTML_FILE"
          
          # Supprimer les autres anciens fichiers HTML pour forcer le rechargement du cache
          for old_file in FR_*.html; do
            if [ "$old_file" != "$NEW_HTML_FILE" ]; then
              echo "Suppression de l'ancien fichier: $old_file"
              rm -f "$old_file"
            fi
          done
          
          # Créer un fichier index.html qui redirige vers le nouveau rapport
          cat > index.html << EOF
        <!DOCTYPE html>
        <html lang="fr">
        <head>
            <meta charset="UTF-8">
            <meta http-equiv="refresh" content="0; url=$NEW_HTML_FILE">
            <title>Foil Report - Redirection</title>
        </head>
        <body>
            <h1>Foil Report</h1>
            <p>Redirection vers le rapport météo...</p>
            <p><a href="$NEW_HTML_FILE">Cliquez ici si la redirection ne fonctionne pas</a></p>
        </body>
        </html>
        EOF
        else
          echo "Aucun fichier HTML FR_* trouvé"
        fi
        
    - name: Upload des données CSV
      uses: actions/upload-artifact@v4
      with:
        name: foil-report-data
        path: Donnees_Temporaires/
        retention-days: 7
        
    - name: Déploiement sur GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./Donnees_Temporaires
        publish_branch: gh-pages
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        # Forcer le déploiement même si les fichiers sont identiques
        commit_message: "Update Foil Report - $(date)" 
